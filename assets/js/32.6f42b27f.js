(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{347:function(v,_,t){"use strict";t.r(_);var r=t(27),s=Object(r.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"vue-diff-源码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-diff-源码"}},[v._v("#")]),v._v(" Vue Diff 源码")]),v._v(" "),_("p",[v._v("（一句话：把新旧两颗 VNode 树 "),_("strong",[v._v("同层、双端、最长递增子序列")]),v._v(" 三步走，最小化 DOM 操作）")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"从触发到完成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#从触发到完成"}},[v._v("#")]),v._v(" 从触发到完成")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("阶段")]),v._v(" "),_("th",[v._v("源码函数")]),v._v(" "),_("th",[v._v("作用")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("① 数据变化")]),v._v(" "),_("td",[_("code",[v._v("effect")]),v._v(" → "),_("code",[v._v("scheduler")])]),v._v(" "),_("td",[v._v("触发组件更新")])]),v._v(" "),_("tr",[_("td",[v._v("② 生成 VNode")]),v._v(" "),_("td",[_("code",[v._v("render")])]),v._v(" "),_("td",[v._v("拿到 "),_("strong",[v._v("newVnode")])])]),v._v(" "),_("tr",[_("td",[v._v("③ 进入 patch")]),v._v(" "),_("td",[_("code",[v._v("patch(prevVnode, nextVnode)")])]),v._v(" "),_("td",[v._v("开始 Diff")])]),v._v(" "),_("tr",[_("td",[v._v("④ 子节点 Diff")]),v._v(" "),_("td",[_("code",[v._v("patchKeyedChildren(c1, c2)")])]),v._v(" "),_("td",[v._v("核心算法")])]),v._v(" "),_("tr",[_("td",[v._v("⑤ 真实 DOM 更新")]),v._v(" "),_("td",[_("code",[v._v("hostInsert / hostRemove / hostPatchProp")])]),v._v(" "),_("td",[v._v("最小化操作")])])])]),v._v(" "),_("hr"),v._v(" "),_("p",[v._v("“"),_("strong",[v._v("同级头尾双指针 + key 哈希表，O(n) 找出最小 DOM 操作集")]),v._v("”。")]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"前置共识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前置共识"}},[v._v("#")]),v._v(" 前置共识")]),v._v(" "),_("ul",[_("li",[v._v("只比"),_("strong",[v._v("同级")]),v._v("节点，不跨层 → O(n³) → O(n)。")]),v._v(" "),_("li",[v._v("有 key 走"),_("strong",[v._v("快速映射")]),v._v("，无 key 就地复用。")]),v._v(" "),_("li",[v._v("真实 DOM 最小化：移动 > 复用 > 删除 > 创建。")])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"三步流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三步流程"}},[v._v("#")]),v._v(" 三步流程")]),v._v(" "),_("p",[_("strong",[v._v("Step1 同类型？")]),v._v("\nvnode.type 不同 → 直接销毁旧、创建新，结束。")]),v._v(" "),_("p",[_("strong",[v._v("Step2 文本？")]),v._v("\n同为文本 → 直接改 "),_("code",[v._v("textContent")]),v._v("，结束。")]),v._v(" "),_("p",[_("strong",[v._v("Step3 子节点 Diff（核心）")])]),v._v(" "),_("div",{staticClass:"language-text extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("old: [A, B, C, D]\nnew: [B, C, A]\n")])])]),_("ol",[_("li",[_("strong",[v._v("双端 4 次尝试")]),v._v("\n• oldStart vs newStart\n• oldEnd   vs newEnd\n• oldStart vs newEnd\n• oldEnd   vs newStart\n任一命中 → 递归 patch + 指针内移/节点移动。（"),_("strong",[v._v("递归 patch 就是把 Diff 算法套娃到每一层子树，直到叶子节点为止")]),v._v("）")]),v._v(" "),_("li",[_("strong",[v._v("4 连未命中 → key 哈希表")]),v._v("\n把旧剩余节点做 "),_("code",[v._v("{key:index}")]),v._v(" 映射，再遍历新剩余：\n• key 存在 → 移动 DOM 到正确位置\n• key 缺失 → 创建并插入\n• 旧节点在新列表未出现 → 删除")]),v._v(" "),_("li",[_("strong",[v._v("指针结束")]),v._v("\n• 新列表先完 → 批量删除旧多余节点\n• 旧列表先完 → 批量插入新剩余节点")])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"_3-复杂度-优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-复杂度-优化"}},[v._v("#")]),v._v(" 3. 复杂度 & 优化")]),v._v(" "),_("ul",[_("li",[v._v("时间复杂度 "),_("strong",[v._v("O(n)")]),v._v("。")]),v._v(" "),_("li",[v._v("Vue3 加 PatchFlag（位运算）：静态节点提升，动态节点"),_("strong",[v._v("按位精准比对")]),v._v("，更快但"),_("strong",[v._v("DOM 次数不变")]),v._v("。")])]),v._v(" "),_("hr"),v._v(" "),_("h3",{attrs:{id:"_4-金句"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-金句"}},[v._v("#")]),v._v(" 4. 金句")]),v._v(" "),_("p",[v._v("“Diff 算法的精髓就是"),_("strong",[v._v("用 key 在 O(n) 内把 DOM 操作降到最少")]),v._v("，移动优先、增删兜底。”")]),v._v(" "),_("h2",{attrs:{id:"vue2-vue3diff算法优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue2-vue3diff算法优化"}},[v._v("#")]),v._v(" Vue2，Vue3diff算法优化")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("优化点")]),v._v(" "),_("th",[v._v("Vue2")]),v._v(" "),_("th",[v._v("Vue3")]),v._v(" "),_("th",[v._v("触发阶段")]),v._v(" "),_("th",[v._v("作用 / 原理")]),v._v(" "),_("th",[v._v("时间复杂度")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[v._v("双端指针 4 连比")])]),v._v(" "),_("td",[v._v("✅ 有")]),v._v(" "),_("td",[v._v("✅ 保留")]),v._v(" "),_("td",[v._v("运行时")]),v._v(" "),_("td",[v._v("头/尾 4 种比对，减少遍历次数")]),v._v(" "),_("td",[v._v("O(n)")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("key 哈希表乱序处理")])]),v._v(" "),_("td",[v._v("✅ 有")]),v._v(" "),_("td",[v._v("✅ 保留")]),v._v(" "),_("td",[v._v("运行时")]),v._v(" "),_("td",[v._v("key → index 映射，精准移动/增删")]),v._v(" "),_("td",[v._v("O(n)")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("静态提升 (HOISTED)")])]),v._v(" "),_("td",[v._v("❌ 无")]),v._v(" "),_("td",[v._v("✅ 新增")]),v._v(" "),_("td",[v._v("编译期")]),v._v(" "),_("td",[v._v("纯静态节点提前创建，patch 阶段直接跳过")]),v._v(" "),_("td",[v._v("0（零 diff 成本）")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("PatchFlag 位图 diff")])]),v._v(" "),_("td",[v._v("❌ 无")]),v._v(" "),_("td",[v._v("✅ 新增")]),v._v(" "),_("td",[v._v("运行时")]),v._v(" "),_("td",[v._v("按位比对 TEXT/CLASS/STYLE/PROPS 等，仅更新变动部分")]),v._v(" "),_("td",[v._v("O(n)")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("最长递增子序列 (LIS)")])]),v._v(" "),_("td",[v._v("❌ 无")]),v._v(" "),_("td",[v._v("✅ 新增")]),v._v(" "),_("td",[v._v("运行时")]),v._v(" "),_("td",[v._v("贪心+二分求 LIS，只移动不在序列中的节点，DOM 移动次数减至 n − LIS.len")]),v._v(" "),_("td",[v._v("O(n log n)")])])])]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("Vue2")]),v._v("：仅双端 Diff → *"),_("em",[v._v("O(n)，最坏O(")]),v._v("\n$$\nn^3\n$$\n"),_("em",[v._v(")")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("Vue3")]),v._v("：双端 Diff(仍 O(n)) + LIS(O(n log n)) → "),_("strong",[v._v("整体 O(n log n)")]),v._v("，但常数更低、跳过大量静态节点，"),_("strong",[v._v("实际耗时远小于 Vue2")]),v._v("。")])])]),v._v(" "),_("p",[v._v("• Vue 2：n 指 "),_("strong",[v._v("全部子节点")]),v._v("（静态 + 动态）\n• Vue 3：n 只指 "),_("strong",[v._v("动态子节点")]),v._v("（静态被提前提升，直接跳过，不计入 n）")]),v._v(" "),_("h3",{attrs:{id:"vue3diff算法流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue3diff算法流程"}},[v._v("#")]),v._v(" vue3diff算法流程")]),v._v(" "),_("p",[v._v("Vue 3 的优化可以概括为 "),_("strong",[v._v("「三层漏斗」")]),v._v("：")]),v._v(" "),_("h4",{attrs:{id:"第-1-层-编译期「静态提升」-把-0-成本节点直接拿走"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第-1-层-编译期「静态提升」-把-0-成本节点直接拿走"}},[v._v("#")]),v._v(" 第 1 层：编译期「静态提升」——"),_("strong",[v._v("把 0 成本节点直接拿走")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("识别")]),v._v("：编译器给每个节点打静态等级。")]),v._v(" "),_("li",[_("strong",[v._v("动作")]),v._v("：纯静态节点（无插值、无绑定、无指令）被提前创建为常量（"),_("code",[v._v("HOISTED")]),v._v("），"),_("strong",[v._v("render 时直接复用，patch 阶段完全不参与 Diff")]),v._v("。")]),v._v(" "),_("li",[_("strong",[v._v("效果")]),v._v("：整个子树被「物理移除」出 Diff 范围，n 直接变小。")])]),v._v(" "),_("h5",{attrs:{id:"第-2-层-运行时「patchflag-位图」-只比对声明过的动态部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第-2-层-运行时「patchflag-位图」-只比对声明过的动态部分"}},[v._v("#")]),v._v(" 第 2 层：运行时「PatchFlag 位图」——"),_("strong",[v._v("只比对声明过的动态部分")])]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("识别")]),v._v("：对剩下的动态节点，用 1/2/4/8/… 位标记哪一项会变（TEXT、CLASS、STYLE、PROPS…）。")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("动作")]),v._v("：patch 时用位运算 & 一次就能决定「要干什么」：")]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("patchFlag "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("&")]),v._v(" PatchFlags"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("TEXT")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("/* 只比文本 */")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("效果")]),v._v("："),_("br"),v._v("\n• 静态属性、静态子节点全部跳过；"),_("br"),v._v("\n• 常数级时间完成一次精准更新，避免"),_("strong",[v._v("全量属性比对")]),v._v("。")])])]),v._v(" "),_("h4",{attrs:{id:"第-3-层-运行时「lis-双端-diff」-把-dom-移动次数压到理论下限"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第-3-层-运行时「lis-双端-diff」-把-dom-移动次数压到理论下限"}},[v._v("#")]),v._v(" 第 3 层：运行时「LIS + 双端 Diff」——"),_("strong",[v._v("把 DOM 移动次数压到理论下限")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("场景")]),v._v("：动态列表顺序打乱（key 稳定）。")]),v._v(" "),_("li",[_("strong",[v._v("动作")]),v._v("（三步）：\n"),_("ol",[_("li",[v._v("用 key 哈希表把「新顺序」映射成「旧索引数组」"),_("code",[v._v("[idx1, idx2, …]")]),v._v("；")]),v._v(" "),_("li",[v._v("对这个索引数组求 "),_("strong",[v._v("最长递增子序列（LIS）")]),v._v("；")]),v._v(" "),_("li",[_("strong",[v._v("只移动不在 LIS 中的节点")]),v._v("，其余保持不动。")])])]),v._v(" "),_("li",[_("strong",[v._v("效果")]),v._v("："),_("br"),v._v("\n• 移动次数从最坏 "),_("strong",[v._v("O(n²)")]),v._v(" 降到 "),_("strong",[v._v("O(n log n)")]),v._v("；"),_("br"),v._v("\n• 真实 DOM 操作次数 = "),_("code",[v._v("n − LIS.length")]),v._v("。")])]),v._v(" "),_("h4",{attrs:{id:"端到端时间复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#端到端时间复杂度"}},[v._v("#")]),v._v(" 端到端时间复杂度")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("阶段")]),v._v(" "),_("th",[v._v("复杂度")]),v._v(" "),_("th",[v._v("说明")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("静态提升")]),v._v(" "),_("td",[v._v("0")]),v._v(" "),_("td",[v._v("编译期完成")])]),v._v(" "),_("tr",[_("td",[v._v("PatchFlag diff")]),v._v(" "),_("td",[v._v("O(k)")]),v._v(" "),_("td",[v._v("k = 动态节点数")])]),v._v(" "),_("tr",[_("td",[v._v("LIS + 双端")]),v._v(" "),_("td",[v._v("O(k log k)")]),v._v(" "),_("td",[v._v("k = 动态乱序节点数")])]),v._v(" "),_("tr",[_("td",[_("strong",[v._v("总耗时")])]),v._v(" "),_("td",[v._v("≈ "),_("strong",[v._v("O(k log k)")])]),v._v(" "),_("td",[v._v("k ≪ n")])])])]),v._v(" "),_("h5",{attrs:{id:"_15-秒总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-秒总结"}},[v._v("#")]),v._v(" 15 秒总结")]),v._v(" "),_("blockquote",[_("p",[v._v("Vue 3 用「静态提升」先砍掉 0 成本节点，再用「PatchFlag」把动态节点 diff 剪到最小，最后用「LIS」把乱序列表的 DOM 移动压到理论下限——三层漏斗，"),_("strong",[v._v("理论 O(n log n)，实际 k 远小于 n，整体比 Vue 2 快 30~50%")]),v._v("。")])])])}),[],!1,null,null,null);_.default=s.exports}}]);