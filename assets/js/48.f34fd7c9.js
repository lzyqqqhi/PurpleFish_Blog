(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{368:function(t,_,v){"use strict";v.r(_);var a=v(27),r=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"dom-树、cssom-树加载与渲染原理-重排-重绘概念及优化方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dom-树、cssom-树加载与渲染原理-重排-重绘概念及优化方案"}},[t._v("#")]),t._v(" DOM 树、CSSOM 树加载与渲染原理，重排/重绘概念及优化方案")]),t._v(" "),_("h3",{attrs:{id:"一、dom-树与-cssom-树加载和渲染原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、dom-树与-cssom-树加载和渲染原理"}},[t._v("#")]),t._v(" 一、DOM 树与 CSSOM 树加载和渲染原理")]),t._v(" "),_("h4",{attrs:{id:"_1-什么是-dom-树和-cssom-树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-dom-树和-cssom-树"}},[t._v("#")]),t._v(" 1. 什么是 DOM 树和 CSSOM 树？")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("DOM（Document Object Model）树")])]),t._v(" "),_("ul",[_("li",[t._v("浏览器解析 HTML，按标签层级结构生成的一棵“文档对象树”。")]),t._v(" "),_("li",[t._v("反映页面的结构和内容。")])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("CSSOM（CSS Object Model）树")])]),t._v(" "),_("ul",[_("li",[t._v("浏览器解析 CSS、内联样式、style 标签及外链样式，构建出的“样式对象树”。")]),t._v(" "),_("li",[t._v("反映页面各元素的样式层级和计算规则。")])])])]),t._v(" "),_("h4",{attrs:{id:"_2-加载与渲染流程-核心步骤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-加载与渲染流程-核心步骤"}},[t._v("#")]),t._v(" 2. 加载与渲染流程（核心步骤）")]),t._v(" "),_("ol",[_("li",[t._v("浏览器自上而下"),_("strong",[t._v("解析 HTML")]),t._v("，构建 DOM 树。")]),t._v(" "),_("li",[t._v("遇到 "),_("code",[t._v('<link rel="stylesheet">')]),t._v(" 或 "),_("code",[t._v("<style>")]),t._v(" 时，"),_("strong",[t._v("阻塞渲染")]),t._v("，开始加载/解析 CSS，构建 CSSOM 树。")]),t._v(" "),_("li",[t._v("当 DOM 树和 CSSOM 树都构建完成后，"),_("strong",[t._v("合并为 Render Tree（渲染树）")]),t._v("。\n"),_("ol",[_("li",[t._v("渲染树只包含可见节点，且每个节点携带最终计算样式。")])])]),t._v(" "),_("li",[t._v("浏览器根据渲染树，计算元素"),_("strong",[t._v("几何信息（布局）")]),t._v("，并进行后续绘制。")])]),t._v(" "),_("h4",{attrs:{id:"_3-渲染示意图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-渲染示意图"}},[t._v("#")]),t._v(" 3. 渲染示意图")]),t._v(" "),_("div",{staticClass:"language-Plain extra-class"},[_("pre",{pre:!0,attrs:{class:"language-plain"}},[_("code",[t._v("HTML（DOM树） + CSS（CSSOM树）\n          ↓\n     渲染树(Render Tree)\n          ↓\n        布局（Layout）\n          ↓\n        绘制（Paint）\n")])])]),_("h3",{attrs:{id:"二、重排-reflow-与重绘-repaint-概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、重排-reflow-与重绘-repaint-概念"}},[t._v("#")]),t._v(" 二、重排（Reflow）与重绘（Repaint）概念")]),t._v(" "),_("h4",{attrs:{id:"_1-重排-reflow"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-重排-reflow"}},[t._v("#")]),t._v(" 1. 重排（Reflow）")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("定义")]),t._v("：当页面元素的"),_("strong",[t._v("结构或几何信息")]),t._v("发生变化（如：尺寸、位置、内容等），浏览器会重新计算内容及其子树的布局。")]),t._v(" "),_("li",[_("strong",[t._v("触发时机")]),t._v("：添加/删除节点、改变元素大小/位置、修改 display/width/height/margin/padding/边框等。")]),t._v(" "),_("li",[_("strong",[t._v("特点")]),t._v("：开销大、影响范围可能很广，可能导致整棵渲染树重新计算。")])]),t._v(" "),_("h4",{attrs:{id:"_2-重绘-repaint"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-重绘-repaint"}},[t._v("#")]),t._v(" 2. 重绘（Repaint）")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("定义")]),t._v("：当元素某些"),_("strong",[t._v("外观样式")]),t._v("变化时（如颜色、背景、可见性等），只需要重新绘制外观，不影响布局。")]),t._v(" "),_("li",[_("strong",[t._v("触发时机")]),t._v("：更改 background、color、visibility、box-shadow 等样式。")]),t._v(" "),_("li",[_("strong",[t._v("特点")]),t._v("：只影响外观，开销小于重排。")])]),t._v(" "),_("h3",{attrs:{id:"三、常见优化方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、常见优化方案"}},[t._v("#")]),t._v(" 三、常见优化方案")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("优化目标")]),t._v(" "),_("th",[t._v("具体策略")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("减少重排")]),t._v(" "),_("td",[t._v("- 批量操作 DOM（离线节点、Fragment）"),_("br"),t._v("- 避免频繁逐一修改样式"),_("br"),t._v("- 使用 "),_("code",[t._v("class")]),t._v(" 控制批量样式切换"),_("br"),t._v("- position 定位脱离文档流的元素")])]),t._v(" "),_("tr",[_("td",[t._v("避免频繁 DOM 查询和布局")]),t._v(" "),_("td",[t._v("- 缓存查询结果"),_("br"),t._v("- 避免在循环/动画中频繁读写 DOM 属性"),_("br"),t._v("- 用 "),_("code",[t._v("requestAnimationFrame")]),t._v(" 合理批量处理动画")])]),t._v(" "),_("tr",[_("td",[t._v("合理触发 GPU 合成")]),t._v(" "),_("td",[t._v("- 动画使用 "),_("code",[t._v("transform")]),t._v("、"),_("code",[t._v("opacity")]),t._v(" 而不是 "),_("code",[t._v("top/left/width/height")]),t._v(" 等属性")])]),t._v(" "),_("tr",[_("td",[t._v("降低重绘范围")]),t._v(" "),_("td",[t._v("- 分层绘制（如主内容和动画层分离）"),_("br"),t._v("- 尽量只重绘必要区域")])])])]),t._v(" "),_("h3",{attrs:{id:"四、总结口诀-记忆"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、总结口诀-记忆"}},[t._v("#")]),t._v(" 四、总结口诀&记忆")]),t._v(" "),_("blockquote",[_("p",[t._v("DOM 树结构，CSSOM 管样式，渲染树合体再绘制。")]),t._v(" "),_("p",[t._v("重排影响大，重绘代价小，优化策略批量做，动画优用 transform！")])]),t._v(" "),_("h3",{attrs:{id:"五、课件总结金句"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五、课件总结金句"}},[t._v("#")]),t._v(" 五、课件总结金句")]),t._v(" "),_("blockquote",[_("p",[t._v("合理理解和优化 DOM/CSSOM 渲染流程、重排重绘机制，是实现高性能 Web 前端页面的基础。")])])])}),[],!1,null,null,null);_.default=r.exports}}]);