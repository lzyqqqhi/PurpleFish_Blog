(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{365:function(v,_,o){"use strict";o.r(_);var e=o(27),t=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"css重排重绘"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css重排重绘"}},[v._v("#")]),v._v(" CSS重排重绘")]),v._v(" "),_("h2",{attrs:{id:"引发重排重绘的-css-属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引发重排重绘的-css-属性"}},[v._v("#")]),v._v(" "),_("strong",[v._v("引发重排重绘的 CSS 属性")])]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("几何属性")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("width")]),v._v(" 和 "),_("code",[v._v("height")]),v._v(" ：当元素的宽度或高度发生变化时，浏览器需要重新计算元素所占空间的布局。例如，一个盒子的宽度从 200px 改为 300px，这会改变页面上其他元素的位置，从而引发重排。同时，改变尺寸后，浏览器也会重新绘制这个元素及其可能受影响的区域。")]),v._v(" "),_("li",[_("code",[v._v("padding")]),v._v(" 和 "),_("code",[v._v("margin")]),v._v(" ：它们会影响元素在页面上的空间分布。例如，增加一个元素的 "),_("code",[v._v("margin")]),v._v(" 会使周围元素的位置发生移动，导致重排。而且为了显示出新的布局和元素样式，也会产生重绘。")]),v._v(" "),_("li",[_("code",[v._v("border")]),v._v(" ：边框的改变会影响元素的大小和位置。比如添加一个 "),_("code",[v._v("border")]),v._v(" 会使元素的总尺寸增加（因为边框占据空间），从而可能改变页面布局，引发重排和重绘。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("布局属性")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("display")]),v._v(" ：当元素的 "),_("code",[v._v("display")]),v._v(" 属性值改变时，例如从 "),_("code",[v._v("block")]),v._v(" 变为 "),_("code",[v._v("none")]),v._v(" 或从 "),_("code",[v._v("inline")]),v._v(" 变为 "),_("code",[v._v("block")]),v._v("，会改变元素的布局方式和在页面中的存在与否，引发重排。同时，元素显示状态的改变也会引发重绘。")]),v._v(" "),_("li",[_("code",[v._v("float")]),v._v(" ：浮动元素会改变页面的布局流程。当一个元素的 "),_("code",[v._v("float")]),v._v(" 属性改变时，浏览器需要重新确定元素的位置以及它与周围元素的关系，从而导致重排和重绘。")]),v._v(" "),_("li",[_("code",[v._v("position")]),v._v(" 及相关属性（"),_("code",[v._v("top")]),v._v("、"),_("code",[v._v("right")]),v._v("、"),_("code",[v._v("bottom")]),v._v("、"),_("code",[v._v("left")]),v._v("）：改变元素的定位方式（如从 "),_("code",[v._v("static")]),v._v(" 改为 "),_("code",[v._v("absolute")]),v._v("）或者改变定位相关的偏移量，会影响元素在页面中的位置，进而引发重排和重绘。例如，一个元素的 "),_("code",[v._v("position")]),v._v(" 为 "),_("code",[v._v("absolute")]),v._v("，且 "),_("code",[v._v("top")]),v._v(" 值从 10px 改为 50px，这会改变其在页面中的位置，周围元素的布局可能也会受到影响。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("内容属性")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("content")]),v._v("（在伪元素中）：当伪元素（如 "),_("code",[v._v("::before")]),v._v(" 或 "),_("code",[v._v("::after")]),v._v("）的 "),_("code",[v._v("content")]),v._v(" 属性改变时，会添加或移除内容，这可能导致元素的尺寸和布局发生变化。例如，为一个元素的 "),_("code",[v._v("::after")]),v._v(" 添加内容会改变该元素的宽度或高度，从而引发重排和重绘。")]),v._v(" "),_("li",[_("code",[v._v("box - sizing")]),v._v(" ：它定义了盒模型的计算方式。当改变这个属性时，元素的实际尺寸计算方式发生改变，会影响页面布局，导致重排和重绘。")])])])]),v._v(" "),_("h2",{attrs:{id:"不引发重排重绘的-css-属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#不引发重排重绘的-css-属性"}},[v._v("#")]),v._v(" "),_("strong",[v._v("不引发重排重绘的 CSS 属性")])]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("颜色和背景相关属性")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("color")]),v._v(" ：改变元素的文字颜色通常不会影响元素的布局，只是改变了文字的显示颜色，所以只涉及重绘而不引发重排。例如，将文字颜色从黑色改为红色，浏览器只需要重新绘制文字的颜色部分。")]),v._v(" "),_("li",[_("code",[v._v("background - color")]),v._v(" 和 "),_("code",[v._v("background - image")]),v._v(" ：背景颜色或背景图片的改变只是改变了元素的背景显示，不会改变元素的尺寸和位置，因此只涉及重绘。比如将背景颜色从白色改为灰色，浏览器只需重新绘制背景部分。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("字体相关属性（部分）")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("font - style")]),v._v(" ：改变字体风格（如从正常变为斜体）一般不会影响元素的布局尺寸，只是改变了文字的显示风格，只涉及重绘。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("文本相关属性（部分）")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("text - indent")]),v._v(" ：文本缩进的改变通常不会改变元素的布局结构，只是改变了文本内容的显示位置在元素内部的偏移，属于重绘操作。例如，将文本缩进从 0 改为 2em，文本在元素内部的起始位置改变，但元素本身的尺寸和位置不变。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("边框和轮廓相关属性（部分）")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("border - color")]),v._v(" ：改变边框颜色不会影响边框的尺寸和元素的位置，只涉及重绘。比如边框颜色从红色改为蓝色，只是颜色的改变，元素的布局不发生变化。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("使用 "),_("code",[v._v("transform")]),v._v(" 和 "),_("code",[v._v("opacity")]),v._v(" 属性进行动画等操作")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("transform")]),v._v(" ："),_("code",[v._v("transform")]),v._v(" 是一种强大的 CSS 属性，用于对元素进行旋转、缩放、倾斜或移动等操作。它的优势在于可以在不引发重排的情况下改变元素的视觉效果，因为它是在 GPU（图形处理器）上进行的计算。例如，使用 "),_("code",[v._v("transform: rotate(45deg)")]),v._v(" 对元素进行旋转，浏览器会利用 GPU 的强大计算能力来处理这个变换，并且不会改变元素在文档流中的位置和尺寸，从而避免重排，只有重绘操作。")]),v._v(" "),_("li",[_("code",[v._v("opacity")]),v._v(" ：改变元素的透明度也不会影响元素的布局，只是改变了元素的显示透明程度。例如，将元素的透明度从 1 改为 0.5，浏览器只需要重新绘制元素的透明部分，不会改变元素的位置和周围元素的布局。")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);