(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{360:function(v,t,_){"use strict";_.r(t);var r=_(27),a=Object(r.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"首屏加载与性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首屏加载与性能优化"}},[v._v("#")]),v._v(" 首屏加载与性能优化")]),v._v(" "),t("h2",{attrs:{id:"一、fsp-first-paint-首次绘制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、fsp-first-paint-首次绘制"}},[v._v("#")]),v._v(" 一、FSP（First Paint，首次绘制）")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("定义")]),v._v(" ：这是"),t("u",[v._v("浏览器开始对页面任何内容进行绘制的时间点")]),v._v("，内容可以是文字、图像，甚至是一个空白的背景。它标志着浏览器将最初的内容呈现给用户，是用户能感知到浏览器开始 “有动静” 的时刻，哪怕只是很简单的背景色变化等。")]),v._v(" "),t("li",[t("strong",[v._v("重要性")]),v._v(" ：快速的首次绘制能给用户一种页面正在迅速加载的初步印象，降低用户对页面响应迟缓的感知，提升整体的用户体验。")]),v._v(" "),t("li",[t("strong",[v._v("影响因素及优化方向")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("资源加载")]),v._v(" ：浏览器需要先获取诸如 HTML、CSS、JavaScript 等资源才能进行绘制。优化资源加载速度，如通过"),t("u",[v._v("压缩资源文件、使用 CDN（内容分发网络）加速资源传输、采用合适的缓存策略（如设置 HTTP 缓存头等）")]),v._v("，能加快 FSP。")]),v._v(" "),t("li",[t("strong",[v._v("代码复杂性")]),v._v(" ：复杂的 JavaScript 脚本或 CSS 样式表可能会延迟首次绘制。尽量精简初始加载的代码，避免在首屏渲染阶段执行大量复杂的脚本，对非关键样式可考虑进行"),t("u",[v._v("懒加载或拆分")]),v._v("等方式优化。")]),v._v(" "),t("li",[t("strong",[v._v("网络环境")]),v._v(" ：良好的网络连接有助于快速获取资源，但在较差的网络环境下，更需要通过上述优化手段来缩小 FSP 的差距。")])])])]),v._v(" "),t("h2",{attrs:{id:"二、inp-interaction-to-next-paint-交互到下次绘制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、inp-interaction-to-next-paint-交互到下次绘制"}},[v._v("#")]),v._v(" 二、INP（Interaction to Next Paint，交互到下次绘制）")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("定义")]),v._v(" ：用户与网页"),t("u",[v._v("进行交互动作（如点击按钮、链接、滚动等）后，从交互发生的那一刻起，到浏览器开始绘制与这次交互相关的画面")]),v._v("（新内容或新画面变化，比如点击按钮后触发的一个动画效果开始绘制）的时间跨度。它反映了用户操作后页面响应绘制的及时性。")]),v._v(" "),t("li",[t("strong",[v._v("重要性")]),v._v(" ：较低的 INP 意味着用户操作后能更快看到页面的反馈，能显著提升用户与网页交互时的流畅感和满意度，让用户感觉页面交互是跟手且及时的。")]),v._v(" "),t("li",[t("strong",[v._v("影响因素及优化方向")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("事件处理程序效率")]),v._v(" ：如果为交互事件绑定的处理程序执行时间过长，会阻塞后续的绘制操作。优化事件处理函数，减少不必要的计算、DOM 操作等，使其尽量简洁高效。")]),v._v(" "),t("li",[t("strong",[v._v("资源加载与准备")]),v._v(" ：某些交互可能依赖于额外的资源（如新的图像、动画效果所需的数据等）。提前"),t("u",[v._v("预加载")]),v._v("可能用到的资源，或者在用户交互时采用懒加载并合理安排加载优先级，避免因资源获取延迟而影响 INP。")]),v._v(" "),t("li",[t("strong",[v._v("渲染性能")]),v._v(" ：浏览器本身的渲染引擎性能以及页面的渲染复杂度（如过多的层叠样式、复杂的布局等）会影响从交互到绘制的时间。优化页面的 CSS 架构，减少过度的层叠和复杂的样式计算，避免不必要的重排和重绘操作，有助于降低 INP。")])])])]),v._v(" "),t("h2",{attrs:{id:"三、fcp-first-contentful-paint-首次内容绘制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、fcp-first-contentful-paint-首次内容绘制"}},[v._v("#")]),v._v(" 三、FCP（First Contentful Paint，首次内容绘制）")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("定义")]),v._v(" ：指的是浏览"),t("u",[v._v("器首次渲染与文档内容相关的任何视觉内容")]),v._v("的时间点，包括文字、图像、非白色的 canvas 元素等。它比 FSP 更聚焦于实质性的内容呈现，是用户能看到页面上真正有意义内容的开始时刻，用户能初步判断页面是否能提供所需信息的关键时间点。")]),v._v(" "),t("li",[t("strong",[v._v("重要性")]),v._v(" ：快速的首次内容绘制能有效降低用户的等待焦虑感，让用户更快获取有价值的内容，对提高用户的留存率和继续浏览页面的意愿有着重要的作用，尤其对于内容型网站（如新闻、博客等）更为关键。")]),v._v(" "),t("li",[t("strong",[v._v("影响因素及优化方向")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("关键资源加载")]),v._v(" ：与首屏内容展示直接相关的资源（如首屏的图片、文字排版所需的 CSS、关键的 JavaScript 等）的加载速度至关重要。对这些关键资源进行优先加载、压缩优化以及确保其加载路径的高效性，能加快 FCP。")]),v._v(" "),t("li",[t("strong",[v._v("HTML 结构与 CSS 样式")]),v._v(" ：复杂的 HTML 结构和大量未优化的 CSS 样式可能会导致浏览器在计算样式和布局时耗费较多时间，从而延迟 FCP。简化 HTML 代码，优化 CSS 选择器，采用合理的 CSS 架构（如避免使用过多的后代选择器等），减少样式的复杂度可以提升 FCP。")]),v._v(" "),t("li",[t("strong",[v._v("JavaScript 执行")]),v._v(" ：如果在首屏内容渲染前执行了较多的 JavaScript 代码，可能会阻塞渲染过程。将非关键的 JavaScript 延迟"),t("u",[v._v("加载或异步加载")]),v._v("，确保关键的渲染流程不被过多的脚本执行干扰，有助于优化 FCP。")])])])]),v._v(" "),t("h2",{attrs:{id:"优化首屏渲染的探索与实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化首屏渲染的探索与实践"}},[v._v("#")]),v._v(" 优化首屏渲染的探索与实践")]),v._v(" "),t("p",[v._v("在网页性能优化的旅程中，首屏渲染速度的提升是关键一环。它直接关系到用户体验和留存率。本文将深入探讨如何通过优化 z - index 属性和利用 GPU 绘制来提升首屏渲染性能。")]),v._v(" "),t("h2",{attrs:{id:"一、z-index-与元素区域优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、z-index-与元素区域优化"}},[v._v("#")]),v._v(" 一、z - index 与元素区域优化")]),v._v(" "),t("p",[v._v("z - index 属性，这个看似简单的 CSS 属性，在首屏渲染优化中扮演着重要角色。它不仅决定了元素的堆叠顺序，还影响着浏览器的渲染效率。当元素的 z - index 设置不合理时，可能会导致不必要的元素重叠，进而引发重绘和回流问题。")]),v._v(" "),t("p",[v._v("重绘和回流是网页性能优化中的两个关键概念。重绘是指元素的外观改变（如颜色、边框等）但不涉及布局的变化，而回流则是元素的布局发生变化，导致浏览器需要重新计算元素的位置和尺寸。回流通常比重绘更耗时，因为它涉及到整个文档或部分文档的重新布局。")]),v._v(" "),t("p",[v._v("在首屏渲染中，我们可以通过以下方式优化 z - index 属性：")]),v._v(" "),t("ol",[t("li",[t("p",[t("strong",[v._v("合理设置 z - index 值")]),v._v("：确保元素的堆叠顺序符合设计要求，同时避免过多的层次嵌套。过多的层次嵌套会增加浏览器的渲染复杂度。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("减少不必要的元素重叠")]),v._v("：检查页面布局，去除那些对用户体验没有实际帮助的重叠元素。例如，某些装饰性的元素可以考虑简化或移除。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("优化元素区域大小")]),v._v("：对于那些 z - index 值较大的元素，尽量减小其区域大小。这样可以减少浏览器在渲染时的计算量，提高渲染效率。")])])]),v._v(" "),t("h2",{attrs:{id:"二、浏览器层级与-gpu-绘制优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、浏览器层级与-gpu-绘制优化"}},[v._v("#")]),v._v(" 二、浏览器层级与 GPU 绘制优化")]),v._v(" "),t("p",[v._v("浏览器在渲染网页时会创建多个层级。这些层级包括文档层级、元素层级等。复杂网页可能会导致浏览器创建过多的层级，增加渲染的复杂度。")]),v._v(" "),t("p",[v._v("为了优化首屏渲染，我们可以从以下几个方面入手：")]),v._v(" "),t("ol",[t("li",[t("p",[t("strong",[v._v("减少不必要的层级嵌套")]),v._v("：简化 HTML 结构，避免使用过多的嵌套标签。例如，使用语义化的 HTML 标签，可以减少不必要的 div 嵌套。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("利用 GPU 绘制")]),v._v("：现代浏览器支持利用 GPU 来加速图形绘制。我们可以通过使用合适的 CSS 属性来触发 GPU 绘制。常用的触发 GPU 绘制的 CSS 属性包括 transform（如 translate、rotate、scale 等）、opacity 等。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("合理使用 GPU 绘制")]),v._v("：虽然 GPU 绘制可以提升渲染性能，但过度使用也可能导致资源浪费和潜在的性能问题。因此，我们在使用 GPU 绘制时，需要注意以下几点：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("选择关键元素")]),v._v("：将 GPU 绘制应用于首屏中重要的图像、动画元素等，而不是所有元素。")]),v._v(" "),t("li",[t("strong",[v._v("避免过度使用")]),v._v("：不要对大量元素同时应用 GPU 绘制，以免占用过多的 GPU 资源。")]),v._v(" "),t("li",[t("strong",[v._v("测试和监控")]),v._v("：在实际项目中，我们需要对使用 GPU 绘制的元素进行测试和监控，确保其性能表现符合预期。")])])])]),v._v(" "),t("h2",{attrs:{id:"三、优化实践案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、优化实践案例"}},[v._v("#")]),v._v(" 三、优化实践案例")]),v._v(" "),t("p",[v._v("为了更好地理解这些优化方法的实际效果，我们来看一个实践案例。")]),v._v(" "),t("p",[v._v("假设我们有一个新闻网站的首页。页面包含多个新闻卡片，每个卡片包含图片、标题和摘要信息。为了提升首屏渲染速度，我们可以进行以下优化：")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("优化 z - index 属性")]),v._v("：检查新闻卡片的布局，确保 z - index 值设置合理。去除不必要的元素重叠，减小新闻卡片的区域大小。")]),v._v(" "),t("li",[t("strong",[v._v("利用 GPU 绘制")]),v._v("：为新闻卡片的图片应用 transform 属性，例如使用 "),t("code",[v._v("transform: translateZ(0)")]),v._v(" 来触发 GPU 绘制。这样可以加速图片的渲染。")]),v._v(" "),t("li",[t("strong",[v._v("减少层级嵌套")]),v._v("：简化新闻卡片的 HTML 结构，减少不必要的 div 嵌套。使用语义化的 HTML 标签，如 article、section 等。")])]),v._v(" "),t("p",[v._v("通过这些优化措施，我们可以显著提升新闻网站首页的首屏渲染速度。")])])}),[],!1,null,null,null);t.default=a.exports}}]);